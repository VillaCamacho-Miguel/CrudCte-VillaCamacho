[containers]
docker0 ansible_host=172.17.0.2 ansible_user=root ansible_ssh_pass=123
docker1 ansible_host=172.17.0.3 ansible_user=root ansible_ssh_pass=123
docker2 ansible_host=172.17.0.4 ansible_user=root ansible_ssh_pass=123
docker3 ansible_host=172.17.0.5 ansible_user=root ansible_ssh_pass=123
docker4 ansible_host=172.17.0.6 ansible_user=root ansible_ssh_pass=123
docker5 ansible_host=172.17.0.7 ansible_user=root ansible_ssh_pass=123
docker6 ansible_host=172.17.0.8 ansible_user=root ansible_ssh_pass=123
docker7 ansible_host=172.17.0.9 ansible_user=root ansible_ssh_pass=123
docker8 ansible_host=172.17.0.10 ansible_user=root ansible_ssh_pass=123
docker9 ansible_host=172.17.0.11 ansible_user=root ansible_ssh_pass=123

# This is the default ansible 'hosts' file.
#
# It should live in /etc/ansible/hosts
#
#   - Comments begin with the '#' character
#   - Blank lines are ignored
#   - Groups of hosts are delimited by [header] elements
#   - You can enter hostnames or ip addresses
#   - A hostname/ip can be a member of multiple groups

# Ex 1: Ungrouped hosts, specify before any group headers:

## green.example.com
## blue.example.com
## 192.168.100.1
## 192.168.100.10

# Ex 2: A collection of hosts belonging to the 'webservers' group:

## [webservers]
## alpha.example.org
## beta.example.org
## 192.168.1.100
## 192.168.1.110

# If you have multiple hosts following a pattern, you can specify
# them like this:

## www[001:006].example.com

# Ex 3: A collection of database servers in the 'dbservers' group:

## [dbservers]
##
## db01.intranet.mydomain.net
## db02.intranet.mydomain.net
## 10.25.1.56
## 10.25.1.57

# Here's another example of host ranges, this time there are no
# leading 0s:

## db-[99:101]-node.example.com

